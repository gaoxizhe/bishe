<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.dao.StudentDao">
    <insert id="insertStudent">
        insert into student_info(name, class_id, phone, teacher_id, instructor_id)
        VALUES (#{name}, #{classId}, #{phone}, #{teacherId}, #{instructorId});
    </insert>
    <update id="updateStudentById">
        update student_info
        <set>
            <if test="name != null">
                name = #{name},
            </if>

            <if test="classId != null">
                class_id = #{classId},
            </if>

            <if test="phone != null">
                phone = #{phone},
            </if>

            <if test="teacherId != null">
                teacher_id = #{teacherId},
            </if>

            <if test="instructorId != null">
                instructor_id = #{instructorId},
            </if>
        </set>
        where id =  #{id}
    </update>
    <delete id="deleteStudentById">
        delete
        from student_info
        where id = #{id}
    </delete>
    <select id="getStudentPageList" resultType="com.example.model.Student">
        select si.id,
               si.name,
               si.phone,
               si.class_id   as classId,
               si.teacher_id as teacherId,
               si.instructor_id instructorId,
               c.name        as className,
               u.name        as teacherName,
               u2.name       as instructorName,
               u.phone       as teacherPhone,
               u2.phone      as instructorPhone,
               p.id          as professionId,
               p.name        as professionName

        from student_info si
                 left join class c on c.id = si.class_id
                 left join profession p on p.id = c.p_id
                 left join user_info u on u.id = si.teacher_id
                 left join user_info u2 on u2.id = si.instructor_id
    </select>
    <select id="getStudentById" resultType="com.example.model.Student">
        select si.id,
               si.name,
               si.phone,
               si.class_id   as classId,
               si.teacher_id as teacherId,
               si.instructor_id instructorId,
               c.name        as className,
               u.name        as teacherName,
               u2.name       as instructorName,
               u.phone       as teacherPhone,
               u2.phone      as instructorPhone,
               p.id          as professionId,
               p.name        as professionName

        from student_info si
                 left join class c on c.id = si.class_id
                 left join profession p on p.id = c.p_id
                 left join user_info u on u.id = si.teacher_id
                 left join user_info u2 on u2.id = si.instructor_id
        where si.id = #{id};
    </select>
</mapper>